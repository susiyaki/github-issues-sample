{"version":3,"sources":["lib/colorService/index.ts","lib/parseQueryString/index.ts","components/atoms/Label.tsx","components/atoms/Link.tsx","components/atoms/IssueIcon.tsx","components/atoms/IssueFilterButton.tsx","components/atoms/Indicator.tsx","components/atoms/MarkdownViewer.tsx","lib/pastTimeFormat/index.ts","components/atoms/PastTimeText.tsx","components/atoms/ErrorText.tsx","components/atoms/ToggleInput.tsx","components/molecules/LabelGroup.tsx","components/molecules/Pagination.tsx","components/molecules/IssueListItem.tsx","components/molecules/IssueListHeader.tsx","components/organisms/IssueList.tsx","config/route.ts","components/organisms/Header.tsx","components/organisms/IssueDetailBody.tsx","components/organisms/IssueDetailHeader.tsx","hooks/api/github/issues/endpoint.ts","hooks/api/github/apiClient.ts","hooks/api/github/issues/request.ts","hooks/api/github/issues/index.ts","hooks/api/github/search/endpoint.ts","hooks/api/github/search/request.ts","pages/issues/index.tsx","hooks/api/github/search/index.ts","pages/issues/_number/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colorService","hex","slice","length","map","str","parseInt","rgb","Math","floor","parseQueryString","queryString","substring","split","p","reduce","obj","e","Label","backgroundColor","content","bg","color","getLabelColor","Link","to","onClick","fontWeight","hoverColor","underline","style","cursor","OPEN_COLOR","CLOSED_COLOR","INVERTED_COLOR","IssueIcon","label","type","inverted","paddingTop","paddingBottom","paddingLeft","paddingRight","alignItems","size","fontSize","ACTIVE_COLOR","INACTIVE_COLOR","IssueFilterButton","active","count","marginRight","undefined","toUpperCase","OverlayIndicator","isVisible","width","height","bottom","top","left","position","marginLeft","marginTop","MarkdownViewer","markdonwText","html","marked","gfm","className","dangerouslySetInnerHTML","__html","padding","pastTimeFormat","date","event","dayjs","now","diffYears","diff","diffMonths","diffDays","diffHours","diffMinutes","diffSecounds","PastTimeText","aria-label","format","ErrorText","justifyContent","ToggleInput","name","value","mode","placeholder","onChange","onBlur","useState","open","setOpen","v","setV","ref","useRef","useMemo","target","onKeyPress","key","current","blur","autoFocus","LabelGroup","labels","id","Pagination","perPage","totalCount","props","pageCount","ceil","marginPageCount","surroundingPageCount","IssueListItem","issue","state","title","number","created_at","user","login","IssueListHeader","filter","openIssuesCount","closedIssuesCount","handleChangeFilter","borderRadius","borderBottomWidth","borderTopLeftRadius","borderTopRightRadius","margin","IssueList","issues","handleClickIssueListItem","index","borderWidth","borderBottom","route","issueNumStr","Header","Item","IssueDetailBody","src","avatar_url","flexGrow","caret","borderBottomLeftRadius","borderBottomRightRadius","borderTopWidth","body","IssueDetailHeader","opacity","marginBottom","borderBottomColor","githubIssueEndpoint","owner","repo","page","apiClient","axios","create","baseURL","interceptors","request","use","req","githubIssueApiRequest","queryParams","get","then","res","data","useGithubIssuesApi","getIssues","options","useQuery","queryKey","queryFn","getIssue","githubSearchEndpoint","githubSearchApiRequest","Issues","searchIssues","setIssuus","setPage","setFilter","search","useLocation","push","useHistory","useEffect","pathname","openIssues","refetchOnMount","retry","closedIssues","onSuccess","isLoading","isError","total_count","useCallback","prev","handlePageChange","preventDefault","handleChangeQueryString","currentPage","onPageChange","Issue","useRouteMatch","params","setTimeout","queryClient","QueryClient","App","QueryClientProvider","client","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ed181e2.chunk.js","sourcesContent":["export const colorService = {\n  // TODO: invalid pattern error\n  hex2rgb: (hex: string): number[] => {\n    if (hex.slice(0, 1) == '#') hex = hex.slice(1);\n    if (hex.length == 3)\n      hex =\n        hex.slice(0, 1) +\n        hex.slice(0, 1) +\n        hex.slice(1, 2) +\n        hex.slice(1, 2) +\n        hex.slice(2, 3) +\n        hex.slice(2, 3);\n\n    return [hex.slice(0, 2), hex.slice(2, 4), hex.slice(4, 6)].map(function (\n      str,\n    ) {\n      return parseInt(str, 16);\n    });\n  },\n\n  // TODO: invalid range error\n  getLuminance: (rgb: number[]): number => {\n    const r = 0.298912;\n    const g = 0.586611;\n    const b = 0.114478;\n    return Math.floor(r * rgb[0] + g * rgb[1] + b * rgb[2]);\n  },\n};\n","export function parseQueryString<T>(queryString: string): T {\n  // TODO 不適切な値のとき弾く\n  return queryString\n    .substring(1)\n    .split('&')\n    .map((p) => p.split('='))\n    .reduce((obj, e) => ({...obj, [e[0]]: e[1]}), {}) as T;\n}\n","import React from 'react';\nimport {colorService} from '@lib';\nimport {Label as PrimerLabel} from '@primer/components';\nimport {ResponsiveValue} from 'styled-system';\nimport {BackgroundColorProperty} from 'styled-system/node_modules/csstype';\n\ntype Props = {\n  backgroundColor?: ResponsiveValue<BackgroundColorProperty>;\n  content: string;\n};\n\nexport const Label: React.FC<Props> = ({backgroundColor, content}) => {\n  // NOTE: 背景色の輝度に合わせて文字色を黒or白で出力\n  const getLabelColor = (hex: string) => {\n    const rgb = colorService.hex2rgb(hex);\n    const luminance = colorService.getLuminance(rgb);\n    if (luminance > 120) {\n      return '#000';\n    } else {\n      return '#FFF';\n    }\n  };\n\n  return (\n    <PrimerLabel\n      bg={backgroundColor && `#${backgroundColor}`}\n      color={backgroundColor && getLabelColor(backgroundColor as string)}>\n      {content}\n    </PrimerLabel>\n  );\n};\n","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Link as PrimerLink} from '@primer/components';\nimport {ResponsiveValue} from 'styled-system';\nimport {\n  FontWeightProperty,\n  ColorProperty,\n} from 'styled-system/node_modules/csstype';\n\ntype Props = ({to?: string} | {onClick?: () => void}) & {\n  to?: string;\n  onClick?: () => void;\n  content: string;\n  color?: ResponsiveValue<ColorProperty>;\n  fontWeight?: ResponsiveValue<FontWeightProperty>;\n};\n\nexport const Link: React.FC<Props> = ({\n  to,\n  onClick,\n  content,\n  color,\n  fontWeight,\n}) => {\n  if (to) {\n    return (\n      <RouterLink to={to}>\n        <PrimerLink\n          color={color || '#000'}\n          hoverColor=\"#0366d6\"\n          underline={false}\n          fontWeight={fontWeight}>\n          {content}\n        </PrimerLink>\n      </RouterLink>\n    );\n  }\n  return (\n    <PrimerLink\n      onClick={onClick}\n      color={color || '#000'}\n      hoverColor=\"#0366d6\"\n      underline={false}\n      fontWeight={fontWeight}\n      style={{cursor: 'pointer'}}>\n      {content}\n    </PrimerLink>\n  );\n};\n","import {Flex, Label, Text} from '@primer/components';\nimport React from 'react';\nimport {GoIssueOpened, GoIssueClosed} from 'react-icons/go';\n\ntype Props = {\n  type: 'open' | 'closed';\n  label?: boolean;\n  inverted?: boolean; // only with label\n};\n\nconst OPEN_COLOR = '#28a745';\nconst CLOSED_COLOR = '#cb2431';\nconst INVERTED_COLOR = '#ffffff';\n\nexport const IssueIcon: React.FC<Props> = ({label, type, inverted}) => {\n  if (label) {\n    return type === 'open' ? (\n      <Label\n        bg={inverted ? OPEN_COLOR : INVERTED_COLOR}\n        paddingTop=\"5px\"\n        paddingBottom=\"5px\"\n        paddingLeft=\"12px\"\n        paddingRight=\"12px\">\n        <Flex alignItems=\"center\">\n          <GoIssueOpened\n            size={16}\n            color={inverted ? INVERTED_COLOR : OPEN_COLOR}\n          />\n          &nbsp;\n          <Text fontSize=\"14px\" color={inverted ? INVERTED_COLOR : OPEN_COLOR}>\n            Open\n          </Text>\n        </Flex>\n      </Label>\n    ) : (\n      <Label\n        bg={inverted ? CLOSED_COLOR : INVERTED_COLOR}\n        paddingTop=\"5px\"\n        paddingBottom=\"5px\"\n        paddingLeft=\"12px\"\n        paddingRight=\"12px\">\n        <Flex alignItems=\"center\">\n          <GoIssueClosed\n            size={16}\n            color={inverted ? INVERTED_COLOR : CLOSED_COLOR}\n          />\n          &nbsp;\n          <Text\n            fontSize=\"14px\"\n            color={inverted ? INVERTED_COLOR : CLOSED_COLOR}>\n            Closed\n          </Text>\n        </Flex>\n      </Label>\n    );\n  } else {\n    return type === 'open' ? (\n      <GoIssueOpened color=\"#22863a\" />\n    ) : (\n      <GoIssueClosed color=\"#cb2431\" />\n    );\n  }\n};\n","import React from 'react';\nimport {Box, Flex, Link} from '@primer/components';\nimport {GoIssueOpened, GoCheck, GoThreeBars} from 'react-icons/go';\n\ntype Props = {\n  type: 'open' | 'closed' | 'all';\n  active: 'open' | 'closed' | 'all';\n  count?: number;\n  onClick: () => void;\n};\n\nconst ACTIVE_COLOR = '#24292e';\nconst INACTIVE_COLOR = '#586069';\n\nexport const IssueFilterButton: React.FC<Props> = ({\n  type,\n  active,\n  count,\n  onClick,\n}) => {\n  return (\n    <Box marginRight=\"16px\">\n      <Link\n        onClick={onClick}\n        backgroundColor=\"transparent\"\n        hoverColor={ACTIVE_COLOR}\n        color={type === active ? ACTIVE_COLOR : INACTIVE_COLOR}\n        style={{cursor: 'pointer'}}>\n        <Flex alignItems=\"center\">\n          {type === 'open' ? (\n            <GoIssueOpened\n              color={type === active ? ACTIVE_COLOR : INACTIVE_COLOR}\n              size={18}\n            />\n          ) : type === 'closed' ? (\n            <GoCheck\n              color={type === active ? ACTIVE_COLOR : INACTIVE_COLOR}\n              size={18}\n            />\n          ) : (\n            <GoThreeBars\n              color={type === active ? ACTIVE_COLOR : INACTIVE_COLOR}\n              size={18}\n            />\n          )}\n          &nbsp;\n          {count === undefined ? '?' : count} {type.slice(0, 1).toUpperCase()}\n          {type.slice(1)}\n        </Flex>\n      </Link>\n    </Box>\n  );\n};\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nimport {CgGhostCharacter} from 'react-icons/cg';\n\ntype Props = {\n  isVisible?: boolean;\n};\n\nexport const OverlayIndicator: React.FC<Props> = ({isVisible = true}) => {\n  if (!isVisible) return null;\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: 'auto',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        position: 'absolute',\n      }}>\n      <div\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          marginLeft: '-10px',\n          marginTop: '-10px',\n        }}>\n        <CgGhostCharacter size={20} />\n        <ReactLoading type=\"spin\" height={20} width={20} color=\"#000\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport marked from 'marked';\nimport {Box} from '@primer/components';\nimport '@primer/css/markdown/index.scss';\n\ntype Props = {\n  markdonwText: string;\n};\n\nexport const MarkdownViewer: React.FC<Props> = ({markdonwText}) => {\n  const html = marked(markdonwText, {gfm: true});\n  return (\n    <Box\n      className=\"markdown-body\"\n      dangerouslySetInnerHTML={{__html: html}}\n      padding=\"15px\"\n    />\n  );\n};\n","import dayjs from 'dayjs';\n\nexport const pastTimeFormat = (date: Date): string => {\n  const event = dayjs(date);\n  const now = dayjs();\n\n  const diffYears = now.diff(event, 'year');\n  if (diffYears >= 1) {\n    return diffYears === 1 ? 'last year' : `${diffYears} years ago`;\n  }\n\n  const diffMonths = now.diff(event, 'month');\n  if (diffMonths >= 1) {\n    return diffMonths === 1 ? 'last month' : `${diffMonths} months ago`;\n  }\n\n  const diffDays = now.diff(event, 'day');\n  if (diffDays >= 1) {\n    return diffDays === 1 ? 'yesterday' : `${diffDays} days ago`;\n  }\n\n  const diffHours = now.diff(event, 'hour');\n  if (diffHours >= 1) {\n    return diffHours === 1 ? '1 hour ago' : `${diffHours} hours ago`;\n  }\n\n  const diffMinutes = now.diff(event, 'minute');\n  if (diffMinutes >= 1) {\n    return diffMinutes === 1 ? '1 minute ago' : `${diffMinutes} minutes ago`;\n  }\n\n  const diffSecounds = now.diff(event, 'second');\n  return diffSecounds <= 10 ? 'now' : `${diffSecounds} seconds ago`;\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {Tooltip} from '@primer/components';\nimport {pastTimeFormat} from '@lib/pastTimeFormat';\n\ntype Props = {\n  date: Date;\n};\n\nexport const PastTimeText: React.FC<Props> = ({date}) => {\n  return (\n    <Tooltip aria-label={dayjs(date).format('MMM, D, YYYY, h:mm A, Z')}>\n      {pastTimeFormat(date)}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport {Flex, Text} from '@primer/components';\nimport {CgGhostCharacter} from 'react-icons/cg';\n\ntype Props = {\n  isVisible?: boolean;\n};\n\nexport const ErrorText: React.FC<Props> = ({isVisible = true}) => {\n  if (!isVisible) return null;\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\">\n      <CgGhostCharacter size={56} />\n      <Text>An Error Occured. Please try again.</Text>\n    </Flex>\n  );\n};\n","import React, {useMemo, useRef, useState} from 'react';\nimport {TextInput, Text} from '@primer/components';\n\ntype Props = {\n  value: string;\n  name: string;\n  placeholder?: string;\n  mode?: 'standalone' | 'dependent';\n  onChange?: (e: React.ChangeEvent) => void;\n  onEnter?: () => void;\n  onBlur?: (event: {target: {name: string; value: string}}) => void;\n};\n\nexport const ToggleInput: React.FC<Props> = ({\n  name,\n  value,\n  mode = 'dependent',\n  placeholder,\n  onChange,\n  onBlur,\n}) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [v, setV] = useState<string>(value);\n  const ref = useRef<HTMLInputElement>(null);\n\n  const isInput = useMemo(() => {\n    if (open) return true;\n    if (mode === 'dependent') {\n      return typeof value === 'string' && value.length === 0;\n    } else {\n      return typeof v === 'string' && v.length === 0;\n    }\n  }, [mode, open, v, value]);\n\n  return isInput ? (\n    <TextInput\n      ref={ref}\n      onBlur={() => {\n        setOpen(false);\n        if (onBlur) {\n          if (v.length !== 0) {\n            onBlur({target: {name, value: v}});\n          } else {\n            setV(value);\n            onBlur({target: {name, value: value}});\n          }\n        }\n      }}\n      name={name}\n      value={mode === 'dependent' ? value : v}\n      placeholder={placeholder}\n      onChange={(e) => {\n        !open && setOpen(true);\n        if (mode === 'dependent') {\n          onChange && onChange(e);\n        } else {\n          setV(e.target.value);\n        }\n      }}\n      onKeyPress={(e) => e.key === 'Enter' && ref.current?.blur()}\n      autoFocus\n    />\n  ) : (\n    <Text onClick={() => setOpen(true)}>{value}</Text>\n  );\n};\n","import React from 'react';\nimport {LabelGroup as PrimerLabelGroup} from '@primer/components';\nimport {Label} from '@components/atoms';\nimport {ApiResponse} from '@types';\n\ntype Props = {\n  labels: ApiResponse.Github.Label[];\n};\n\nexport const LabelGroup: React.FC<Props> = ({labels}) => {\n  if (labels.length === 0) return null;\n\n  return (\n    <PrimerLabelGroup>\n      {labels.map((label) => (\n        <Label\n          key={label.id}\n          backgroundColor={label.color}\n          content={label.name}\n        />\n      ))}\n    </PrimerLabelGroup>\n  );\n};\n","import React, {useMemo} from 'react';\nimport {\n  Pagination as PrimerPagination,\n  PaginationProps,\n} from '@primer/components';\n\ntype Props = Omit<PaginationProps, 'pageCount'> & {\n  perPage: number;\n  totalCount: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  totalCount,\n  ...props\n}) => {\n  const pageCount = useMemo(() => {\n    return Math.ceil(totalCount / perPage);\n  }, [perPage, totalCount]);\n\n  if (!pageCount) {\n    return null;\n  }\n\n  return (\n    <PrimerPagination\n      {...props}\n      pageCount={pageCount}\n      marginPageCount={2}\n      surroundingPageCount={2}\n    />\n  );\n};\n","import React from 'react';\nimport {Box, Flex, Text} from '@primer/components';\nimport {Link, IssueIcon} from '@components/atoms';\nimport {LabelGroup} from '@components/molecules';\nimport {ApiResponse} from '@types';\n\ntype Props = {\n  issue: ApiResponse.Github.Issue;\n  onClick?: () => void;\n};\n\nexport const IssueListItem: React.FC<Props> = ({issue, onClick}) => {\n  return (\n    // TODO: change opacity when hover item\n    <Box>\n      <Flex>\n        <Box paddingTop=\"8px\" paddingLeft=\"16px\">\n          <IssueIcon type={issue.state} />\n        </Box>\n        <Box padding=\"8px\">\n          <Box>\n            <Link onClick={onClick} content={issue.title} fontWeight={600} />\n            &nbsp;\n            <LabelGroup labels={issue.labels} />\n          </Box>\n          <Box marginTop=\"4px\">\n            <Text color=\"#586069\" fontSize=\"14px\">\n              #{issue.number} opened on {issue.created_at} by {issue.user.login}\n            </Text>\n          </Box>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n","import React from 'react';\nimport {BorderBox, Flex} from '@primer/components';\nimport {IssueFilterButton} from '@components/atoms';\n\nexport type IssueListHeaderProps = {\n  filter: {state: 'all' | 'open' | 'closed'};\n  openIssuesCount?: number;\n  closedIssuesCount?: number;\n  handleChangeFilter: (filterParams: {\n    state: 'all' | 'open' | 'closed';\n  }) => void;\n};\n\nexport const IssueListHeader: React.FC<IssueListHeaderProps> = ({\n  filter,\n  openIssuesCount,\n  closedIssuesCount,\n  handleChangeFilter,\n}) => {\n  return (\n    <BorderBox\n      borderRadius={0}\n      borderBottomWidth={1}\n      borderTopLeftRadius={6}\n      borderTopRightRadius={6}\n      backgroundColor=\"#f6f8fa\"\n      padding=\"16px\"\n      margin=\"-1px -1px 0\">\n      <Flex>\n        <IssueFilterButton\n          type=\"open\"\n          active={filter.state}\n          count={openIssuesCount}\n          onClick={() => handleChangeFilter({state: 'open'})}\n        />\n        <IssueFilterButton\n          type=\"closed\"\n          active={filter.state}\n          count={closedIssuesCount}\n          onClick={() => handleChangeFilter({state: 'closed'})}\n        />\n        <IssueFilterButton\n          type=\"all\"\n          active={filter.state}\n          count={(openIssuesCount || 0) + (closedIssuesCount || 0)}\n          onClick={() => handleChangeFilter({state: 'all'})}\n        />\n      </Flex>\n    </BorderBox>\n  );\n};\n","import React from 'react';\nimport {BorderBox} from '@primer/components';\nimport {\n  IssueListItem,\n  IssueListHeader,\n  IssueListHeaderProps,\n} from '@components/molecules';\nimport {ApiResponse} from '@types';\n\ntype Props = {\n  issues: ApiResponse.Github.Issue[];\n  handleClickIssueListItem: (issue: ApiResponse.Github.Issue) => void;\n} & IssueListHeaderProps;\n\nexport const IssueList: React.FC<Props> = ({\n  issues,\n  handleClickIssueListItem,\n  filter,\n  openIssuesCount,\n  closedIssuesCount,\n  handleChangeFilter,\n}) => {\n  return (\n    <BorderBox>\n      <IssueListHeader\n        filter={filter}\n        openIssuesCount={openIssuesCount}\n        closedIssuesCount={closedIssuesCount}\n        handleChangeFilter={handleChangeFilter}\n      />\n      {issues.map((issue, index) => (\n        <BorderBox\n          key={issue.id}\n          borderRadius={0}\n          borderWidth={0}\n          borderBottom={1}\n          borderBottomWidth={issues.length - 1 === index ? 0 : 1}>\n          <IssueListItem\n            issue={issue}\n            onClick={() => handleClickIssueListItem(issue)}\n          />\n        </BorderBox>\n      ))}\n    </BorderBox>\n  );\n};\n","export const route = {\n  issues: '/issues',\n  showIssue: (issueNumStr: string | number): string => `/issues/${issueNumStr}`,\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Header as PrimerHeader, Flex, Text} from '@primer/components';\nimport {CgGhostCharacter} from 'react-icons/cg';\nimport {route} from '@config/route';\n\ntype Props = Record<string, unknown>;\n\nexport const Header: React.FC<Props> = () => {\n  return (\n    <PrimerHeader backgroundColor=\"#24292e\">\n      <PrimerHeader.Item>\n        <Link to={route.issues}>\n          <Flex alignItems=\"center\">\n            <CgGhostCharacter color=\"#ffffff\" size={32} />\n            &nbsp;\n            <Text color=\"#ffffff\" fontSize={16}>\n              Github Issues Dummy\n            </Text>\n          </Flex>\n        </Link>\n      </PrimerHeader.Item>\n    </PrimerHeader>\n  );\n};\n","import React from 'react';\nimport {\n  Avatar,\n  PointerBox,\n  BorderBox,\n  Box,\n  Flex,\n  Text,\n} from '@primer/components';\nimport {MarkdownViewer} from '@components/atoms';\nimport {ApiResponse} from '@types';\n\ntype Props = {\n  issue: ApiResponse.Github.Issue;\n};\n\nexport const IssueDetailBody: React.FC<Props> = ({issue}) => {\n  return (\n    <Flex>\n      <Box marginRight=\"16px\">\n        <Avatar src={issue.user.avatar_url} width={40} height={40} size={40} />\n      </Box>\n      <Box flexGrow={1}>\n        <PointerBox\n          caret=\"left\"\n          paddingTop=\"8px\"\n          paddingBottom=\"8px\"\n          borderRadius={6}\n          borderBottomLeftRadius={0}\n          borderBottomRightRadius={0}\n          backgroundColor=\"#f6f8fa\"\n          paddingLeft=\"16px\"\n          paddingRight=\"16px\">\n          <Text>{issue.user.login}</Text>\n        </PointerBox>\n        <BorderBox\n          borderRadius={1}\n          borderTopLeftRadius={0}\n          borderTopRightRadius={0}\n          borderWidth={1}\n          borderTopWidth={0}>\n          <MarkdownViewer markdonwText={issue.body} />\n        </BorderBox>\n      </Box>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport {BorderBox, Box, Flex, Heading, Text} from '@primer/components';\nimport {PastTimeText, IssueIcon} from '@components/atoms';\nimport {ApiResponse} from '@types';\n\ntype Props = {\n  issue: ApiResponse.Github.Issue;\n};\n\nexport const IssueDetailHeader: React.FC<Props> = ({issue}) => {\n  return (\n    <Box>\n      <Heading fontWeight={300}>\n        {issue.title} <Text opacity={0.6}>#{issue.number}</Text>\n      </Heading>\n      <BorderBox\n        paddingBottom=\"8px\"\n        marginBottom=\"16px\"\n        borderRadius={0}\n        borderWidth={0}\n        borderBottomWidth={1}\n        borderBottomColor=\"#586069\">\n        <Flex alignItems=\"center\">\n          <IssueIcon type={issue.state} label inverted />\n          &nbsp;\n          <Text fontSize={14}>\n            <Text fontWeight=\"bold\">{issue.user.login}</Text>\n            &nbsp;\n            <Text>opened this issue </Text>\n            <PastTimeText date={issue.created_at} />\n          </Text>\n        </Flex>\n      </BorderBox>\n    </Box>\n  );\n};\n","type GetIssuesQueryParams = {\n  owner: string;\n  repo: string;\n  page: number;\n  perPage: number;\n  state?: 'all' | 'open' | 'closed';\n};\ntype GetIssueQueryParams = {\n  owner: string;\n  repo: string;\n  issueNumStr: string;\n};\n\nexport type {GetIssuesQueryParams, GetIssueQueryParams};\n\nexport const githubIssueEndpoint = {\n  getIssues: ({\n    owner,\n    repo,\n    page,\n    perPage,\n    state,\n  }: GetIssuesQueryParams): string =>\n    `repos/${owner}/${repo}/issues?page=${page}&per_page=${perPage}&state=${\n      state || 'all'\n    }`,\n\n  getIssue: ({owner, repo, issueNumStr}: GetIssueQueryParams): string =>\n    `repos/${owner}/${repo}/issues/${issueNumStr}`,\n\n  openIssues: ({owner, repo, issueNumStr}: GetIssueQueryParams): string =>\n    `repos/${owner}/${repo}/issues/${issueNumStr}`,\n};\n","import axios from 'axios';\nexport const apiClient = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\napiClient.interceptors.request.use((req) => {\n  process.env.NODE_ENV === 'development' &&\n    console.log(`${req.method?.toUpperCase()}: ${req.baseURL}${req.url}`);\n  return req;\n});\n","import {ApiResponse} from '@types';\nimport {\n  GetIssueQueryParams,\n  GetIssuesQueryParams,\n  githubIssueEndpoint,\n} from './endpoint';\nimport {apiClient} from '../apiClient';\n\nexport const githubIssueApiRequest = {\n  getIssues: ({\n    queryParams,\n  }: {\n    queryParams: GetIssuesQueryParams;\n  }): Promise<ApiResponse.Github.Issue[]> =>\n    apiClient\n      .get<ApiResponse.Github.Issue[]>(\n        githubIssueEndpoint.getIssues(queryParams),\n      )\n      .then((res) => res.data),\n\n  getIssue: ({\n    queryParams,\n  }: {\n    queryParams: GetIssueQueryParams;\n  }): Promise<ApiResponse.Github.Issue> =>\n    apiClient\n      .get<ApiResponse.Github.Issue>(githubIssueEndpoint.getIssue(queryParams))\n      .then((res) => res.data),\n};\n","import {QueryObserverOptions, useQuery, UseQueryResult} from 'react-query';\nimport {ApiResponse} from '@types';\nimport {githubIssueApiRequest} from './request';\nimport {GetIssuesQueryParams, GetIssueQueryParams} from './endpoint';\n\ntype UseIssuesApi = {\n  getIssues: (args: {\n    queryParams: GetIssuesQueryParams;\n    options?: QueryObserverOptions<ApiResponse.Github.Issue[], Error>;\n  }) => UseQueryResult<ApiResponse.Github.Issue[], Error>;\n\n  getIssue: (args: {\n    queryParams: GetIssueQueryParams;\n    options?: QueryObserverOptions<ApiResponse.Github.Issue, Error>;\n  }) => UseQueryResult<ApiResponse.Github.Issue, Error>;\n};\n\nexport const useGithubIssuesApi = (): UseIssuesApi => {\n  return {\n    getIssues: ({queryParams, options}) =>\n      useQuery({\n        queryKey: [\n          'issues',\n          queryParams.owner,\n          queryParams.repo,\n          queryParams.page,\n          queryParams.perPage,\n          queryParams.state,\n        ],\n        queryFn: () => githubIssueApiRequest.getIssues({queryParams}),\n        ...options,\n      }),\n\n    getIssue: ({queryParams, options}) =>\n      useQuery({\n        queryKey: [\n          'issue',\n          queryParams.owner,\n          queryParams.repo,\n          queryParams.issueNumStr,\n        ],\n        queryFn: () => githubIssueApiRequest.getIssue({queryParams}),\n        ...options,\n      }),\n  };\n};\n","type SearchIssuesQueryParams = {\n  repo: string;\n  state?: 'open' | 'closed';\n};\n\nexport type {SearchIssuesQueryParams};\n\nexport const githubSearchEndpoint = {\n  searchIssues: ({repo, state}: SearchIssuesQueryParams): string =>\n    `search/issues?q=repo:${repo}+type:issue${state && `+state:${state}`}`,\n};\n","import {ApiResponse} from '@types';\nimport {githubSearchEndpoint, SearchIssuesQueryParams} from './endpoint';\nimport {apiClient} from '../apiClient';\n\nexport const githubSearchApiRequest = {\n  // NOTE: https://docs.github.com/en/rest/reference/search#search-issues-and-pull-requests\n  searchIssues: ({\n    queryParams,\n  }: {\n    queryParams: SearchIssuesQueryParams;\n  }): Promise<ApiResponse.Github.SearchResult> =>\n    apiClient\n      .get<ApiResponse.Github.SearchResult>(\n        githubSearchEndpoint.searchIssues(queryParams),\n      )\n      .then((res) => res.data),\n};\n","import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {BiBookBookmark} from 'react-icons/bi';\nimport {ErrorText, OverlayIndicator, ToggleInput} from '@components/atoms';\nimport {Pagination} from '@components/molecules';\nimport {IssueList} from '@components/organisms';\nimport {useGithubIssuesApi, useGithubSearchApi} from '@hooks';\nimport {ApiResponse} from '@types';\nimport {Box, Flex, PointerBox, Heading, Text} from '@primer/components';\nimport {parseQueryString} from '@lib/parseQueryString';\nimport {route} from '@config/route';\n\ntype Props = Record<string, unknown>;\n\nconst PER_PAGE = 10;\nconst DEFAULT_OWNER = 'facebook';\nconst DEFAULT_REPO = 'react';\n\nexport const Issues: React.FC<Props> = () => {\n  const {getIssues} = useGithubIssuesApi();\n  const {searchIssues} = useGithubSearchApi();\n  const [issues, setIssuus] = useState<ApiResponse.Github.Issue[]>([]);\n  const [page, setPage] = useState<number>(1);\n  const [filter, setFilter] = useState<{state: 'all' | 'open' | 'closed'}>({\n    state: 'open',\n  });\n  const {search} = useLocation();\n  const {push} = useHistory();\n  const {owner, repo} = parseQueryString<{owner: string; repo: string}>(search);\n\n  // NOTE: 初回レンダリング時にownerかrepoがなかったらデフォルトを表示\n  useEffect(() => {\n    if (owner && repo) return;\n\n    push({\n      pathname: route.issues,\n      search: `?owner=${DEFAULT_OWNER}&repo=${DEFAULT_REPO}`,\n    });\n  }, []);\n\n  const {data: openIssues} = searchIssues({\n    queryParams: {\n      repo: `${owner}/${repo}`,\n      state: 'open',\n    },\n\n    options: {refetchOnMount: false, retry: 0},\n  });\n  const {data: closedIssues} = searchIssues({\n    queryParams: {\n      repo: `${owner}/${repo}`,\n      state: 'closed',\n    },\n    options: {refetchOnMount: false, retry: 0},\n  });\n  const {isLoading, isError} = getIssues({\n    queryParams: {\n      owner: owner,\n      repo: repo,\n      page,\n      perPage: PER_PAGE,\n      state: filter.state,\n    },\n    options: {\n      onSuccess: (res) => setIssuus(res),\n      retry: 0,\n    },\n  });\n\n  const totalCount = useMemo(() => {\n    if (!openIssues || !closedIssues) return 1;\n\n    if (filter.state === 'open') {\n      return openIssues.total_count;\n    } else if (filter.state === 'closed') {\n      return closedIssues.total_count;\n    } else {\n      return openIssues.total_count + closedIssues.total_count;\n    }\n  }, [openIssues, closedIssues, filter.state]);\n\n  const handleChangeFilter = useCallback(({state}) => {\n    setPage(1);\n    setFilter((prev) => ({...prev, state}));\n  }, []);\n\n  const handlePageChange = useCallback(\n    (e, page) => {\n      e.preventDefault();\n      setPage(page);\n    },\n    [page],\n  );\n\n  const handleChangeQueryString = useCallback(\n    (e) => {\n      push({\n        pathname: route.issues,\n        search: `?owner=${\n          e.target.name === 'owner' ? e.target.value : owner\n        }&repo=${e.target.name === 'repo' ? e.target.value : repo}`,\n      });\n    },\n    [owner, repo],\n  );\n\n  const handleClickIssueListItem = useCallback(\n    (issue: ApiResponse.Github.Issue) => {\n      push({\n        pathname: route.showIssue(issue.number),\n        search: `?owner=${owner}&repo=${repo}`,\n      });\n    },\n    [owner, repo],\n  );\n\n  return (\n    <Box marginLeft=\"10%\" marginRight=\"10%\" paddingTop=\"16px\" marginBottom=\"5%\">\n      <Heading fontSize={20} marginBottom=\"16px\">\n        <Flex alignItems=\"center\">\n          <Box marginRight=\"16px\">\n            <BiBookBookmark />\n            &nbsp;\n            <ToggleInput\n              name=\"owner\"\n              mode=\"standalone\"\n              value={owner}\n              placeholder=\"Owner\"\n              onBlur={handleChangeQueryString}\n            />\n            <Text>/</Text>\n            <ToggleInput\n              name=\"repo\"\n              mode=\"standalone\"\n              value={repo}\n              placeholder=\"repository\"\n              onBlur={handleChangeQueryString}\n            />\n          </Box>\n          <Box>\n            <PointerBox caret=\"left\">\n              <Text\n                fontSize={12}\n                paddingTop=\"8px\"\n                paddingBottom=\"8px\"\n                paddingLeft=\"16px\"\n                paddingRight=\"16px\">\n                You can change owner and repository.\n              </Text>\n            </PointerBox>\n          </Box>\n        </Flex>\n      </Heading>\n      {isError ? (\n        <ErrorText />\n      ) : issues.length === 0 && isLoading ? (\n        <OverlayIndicator />\n      ) : (\n        <>\n          <IssueList\n            issues={issues}\n            filter={filter}\n            openIssuesCount={openIssues?.total_count}\n            closedIssuesCount={closedIssues?.total_count}\n            handleChangeFilter={handleChangeFilter}\n            handleClickIssueListItem={handleClickIssueListItem}\n          />\n          <Pagination\n            currentPage={page}\n            perPage={PER_PAGE}\n            totalCount={totalCount}\n            onPageChange={handlePageChange}\n          />\n        </>\n      )}\n    </Box>\n  );\n};\n","import {useQuery, UseQueryResult, QueryObserverOptions} from 'react-query';\nimport {ApiResponse} from '@types';\nimport {githubSearchApiRequest} from './request';\nimport {SearchIssuesQueryParams} from './endpoint';\n\ntype UseGithubSearchApi = {\n  searchIssues: (args: {\n    queryParams: SearchIssuesQueryParams;\n    options?: QueryObserverOptions<ApiResponse.Github.SearchResult, Error>;\n  }) => UseQueryResult<ApiResponse.Github.SearchResult, Error>;\n};\n\nexport const useGithubSearchApi = (): UseGithubSearchApi => {\n  return {\n    searchIssues: ({queryParams, options}) =>\n      useQuery({\n        queryKey: ['search', queryParams.repo, queryParams.state],\n        queryFn: () => githubSearchApiRequest.searchIssues({queryParams}),\n        ...options,\n      }),\n  };\n};\n","import React, {useEffect} from 'react';\nimport {Box, Flex, Heading} from '@primer/components';\nimport {OverlayIndicator, ErrorText} from '@components/atoms';\nimport {IssueDetailBody, IssueDetailHeader} from '@components/organisms';\nimport {BiBookBookmark} from 'react-icons/bi';\nimport {useLocation, useRouteMatch, useHistory} from 'react-router-dom';\nimport {useGithubIssuesApi} from '@hooks';\nimport {parseQueryString} from '@lib/parseQueryString';\nimport {route} from '@config/route';\n\ntype Props = Record<string, unknown>;\n\nexport const Issue: React.FC<Props> = () => {\n  const {getIssue} = useGithubIssuesApi();\n  const {\n    params: {number: issueNumStr},\n  } = useRouteMatch<{\n    number: string;\n  }>();\n  const {search} = useLocation();\n  const {push} = useHistory();\n  const {owner, repo} = parseQueryString<{owner: string; repo: string}>(search);\n\n  // NOTE: 直アクセスしてきてownerかrepoがないとき一覧にとばす\n  useEffect(() => {\n    if (owner && repo) return;\n\n    push(route.issues);\n  }, [owner, repo]);\n\n  const {data: issue, isLoading, isError} = getIssue({\n    queryParams: {\n      owner,\n      repo,\n      issueNumStr,\n    },\n  });\n\n  if (isLoading) {\n    return <OverlayIndicator />;\n  }\n\n  // NOTE: エラーが起きたらエラー表示後前の一覧に飛ばす\n  if (!issue || isError) {\n    setTimeout(() => {\n      push({\n        pathname: route.issues,\n        search: `?owner=${owner}&repo=${repo}`,\n      });\n    }, 1000);\n    return <ErrorText />;\n  }\n\n  return (\n    <Box marginLeft=\"10%\" marginRight=\"10%\" paddingTop=\"16px\" marginBottom=\"5%\">\n      <Heading fontSize={20} marginBottom=\"16px\">\n        <Flex alignItems=\"center\">\n          <BiBookBookmark />\n          &nbsp;\n          {owner}/{repo}\n        </Flex>\n      </Heading>\n      <IssueDetailHeader issue={issue} />\n      <IssueDetailBody issue={issue} />\n    </Box>\n  );\n};\n","import React from 'react';\nimport {QueryClient, QueryClientProvider} from 'react-query';\nimport {HashRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport {Header} from '@components/organisms';\nimport {Issues} from '@pages/issues';\nimport {Issue} from '@pages/issues/_number';\n\ntype Props = Record<string, unknown>;\n\nconst queryClient = new QueryClient();\n\nconst App: React.FC<Props> = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path=\"/issues/:number\" component={Issue} />\n          <Route exact path=\"/issues\" component={Issues} />\n          <Route render={() => <Redirect to=\"/issues\" />} />\n        </Switch>\n      </HashRouter>\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}